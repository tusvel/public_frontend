{"value":{"boot":{"body":{"eventType":"boot","eventId":"aKtHUGbYKPy3AGXpsyC6u","sessionId":"Dkr29S8R_sUnIrh_tNDq5","payload":{"eventType":"dev"},"context":{"inCI":false,"isTTY":true,"cliVersion":"7.1.1"}},"timestamp":1697790712145},"version-update":{"body":{"eventType":"version-update","eventId":"SvOaKECKGChEx16UfhadD","sessionId":"nypmXBvGoLpMUvuWWqui4","metadata":{"generatedAt":1693998237664,"hasCustomBabel":false,"hasCustomWebpack":false,"hasStaticDirs":false,"hasStorybookEslint":true,"refCount":0,"packageManager":{"type":"npm","version":"9.8.0"},"preview":{"usesGlobals":false},"framework":{"name":"@storybook/react-webpack5","options":{}},"builder":"@storybook/builder-webpack5","renderer":"@storybook/react","storybookVersion":"7.1.1","storybookVersionSpecifier":"^7.1.1","language":"typescript","storybookPackages":{"@storybook/blocks":{"version":"7.1.1"},"@storybook/react":{"version":"7.1.1"},"@storybook/react-webpack5":{"version":"7.1.1"},"@storybook/testing-library":{"version":"0.2.0"},"eslint-plugin-storybook":{"version":"0.6.13"},"storybook":{"version":"7.1.1"}},"addons":{"@storybook/addon-links":{"version":"7.1.1"},"@storybook/addon-essentials":{"version":"7.1.1"},"@storybook/addon-interactions":{"version":"7.1.1"}}},"payload":{},"context":{"inCI":false,"isTTY":true,"cliVersion":"7.1.1","anonymousId":"f2e074f8fab9ded4e758df02f1bebba4e1ca953289283e3c24e707729c117d6d"}},"timestamp":1693998238410},"error":{"body":{"eventType":"error","eventId":"zUa4ZSZMv1CTftUtWdHYK","sessionId":"Dkr29S8R_sUnIrh_tNDq5","payload":{"eventType":"dev","errorHash":"ddb393dea26340036bc14f60484e11206db1c5861e024487b51092f7627d92d9","metadataErrorMessage":"\nYou installed esbuild for another platform than the one you're currently using.\nThis won't work because esbuild is written with native code and needs to\ninstall a platform-specific binary executable.\n\nSpecifically the \"@esbuild/darwin-x64\" package is present but this platform\nneeds the \"@esbuild/darwin-arm64\" package instead. People often get into this\nsituation by installing esbuild with npm running inside of Rosetta 2 and then\ntrying to use it with node running outside of Rosetta 2, or vice versa (Rosetta\n2 is Apple's on-the-fly x86_64-to-arm64 translation service).\n\nIf you are installing with npm, you can try ensuring that both npm and node are\nnot running under Rosetta 2 and then reinstalling esbuild. This likely involves\nchanging how you installed npm and/or node. For example, installing node with\nthe universal installer here should work: https://nodejs.org/en/download/. Or\nyou could consider using yarn instead of npm which has built-in support for\ninstalling a package on multiple platforms simultaneously.\n\nIf you are installing with yarn, you can try listing both \"arm64\" and \"x64\"\nin your \".yarnrc.yml\" file using the \"supportedArchitectures\" feature:\nhttps://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n\nAnother alternative is to use the \"esbuild-wasm\" package instead, which works\nthe same way on all platforms. But it comes with a heavy performance cost and\ncan sometimes be 10x slower than the \"esbuild\" package, so you may also not\nwant to do that.\n"},"context":{"inCI":false,"isTTY":true,"cliVersion":"7.1.1","anonymousId":"f2e074f8fab9ded4e758df02f1bebba4e1ca953289283e3c24e707729c117d6d"}},"timestamp":1697790712146}},"type":"Object","created":"2023-10-20T08:31:52.146Z","ttl":0}